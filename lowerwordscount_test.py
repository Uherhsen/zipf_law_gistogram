# -*- coding: utf-8 -*-
"""
Created on Wed Oct 23 20:35:03 2019
Изучаю синтаксис тестирования модулем unittest
ТУТ ПРИМЕР ТЕСТА МЕТОДА (функции lower_words, из модуля Word_count
но подобным образом можно тестировать и классы
и методы для тестирования (см. метод setUp() для того что бы в каждом, новом тесте
 не создавать новый экземпляр)
"""
import unittest # импорт модуля-тестирования
from Word_count import lower_words # Импорт модуля.функции который будет протестирован

class LowerwordsCountTest(unittest.TestCase): # Создаем дочерний класс наследующий от родительского клаасса unittest.TestCase
    '''Тест для функции lower_words'''
    def test_lower_words(self):
        '''Мы назвали этот метод test_lower_words(). 
        Любой метод, имя которого начинается с test_, 
        будет выполняться автоматически при запуске lowerwordscount_test.py.'''
        l_words = lower_words('test_words.txt') #Если бы тестировался класс, то ТУТ бы создавался экземпляр класса, а потом тестровались методы из него
        content = ['я', 'рыба', '17', 'не', 'имею', 'смысла', 'ничего', 'общего', 'с', 'конституцией', 'тела', 'просто', 'проверяю', 'тут', 'все', 'huita', 'рыба']
        self.assertEqual(l_words,(content,17)) #'В тексте файла ProjectGutenberg.txt 0 слов.')
    # Добавляем еще метод для тестирования, их дофига все делать не буду
    # assertNotEqual(a, b)  a!=b
    #    assertTrue(x) x == True
    #    assertFalse(x) x == False
    #    assertIn(элемент, список) элемент входит в список
    #    assertNotIn(элемент, список) элемент невходит в список 
    def test_lower_words_NotIn(self):
        # Проверка того что элемент не входит в список
        l_words = lower_words('test_words.txt')
        element = ('%',17) # Приходится тестировать кортеж, так как кортеж возвращает тестируемая функция
        self.assertNotIn(l_words,element)
unittest.main() # приказывает выполнить тесты
# Немного  про setUp():
'''Если в класс TestCase включается метод setUp(),
 Python выполняет метод setUp() перед запуском каждого
 метода, имя которого начинается с test_. Все объекты,
 созданные методом setUp(), становятся доступными во всех
 написанных вами тестовых методах. Таким образом создается как бы предустановка с 221 (Мэтиз Изучаем пайтон)'''